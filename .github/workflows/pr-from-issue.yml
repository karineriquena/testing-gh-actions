name: Create PR from issue

on:
  issues:
    types:
      - opened

jobs:
  pre-action:
    runs-on: ubuntu-latest

    steps:
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          body: |
            Aguarde um momento! Branch sendo criada

            > automatically created by: **@github-actions[bot]** :robot:
          reactions: rocket

  auto-assign:
    name: Assign issue to creator
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Assign issue to opener
        if: github.event.issue.assignee == null
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.addAssignees({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignees: [context.payload.issue.user.login]
            })
  
  create_issue_ branch:
    runs-on: ubuntu-latest
    needs: [pre-action, auto-assign]
    outputs:
      branch_name: ${{ env.BRANCH_NAME }}
      pull_request_number: ${{ steps.create-work-branch.outputs.pull-request-number }}
    env:
      BASE _BRANCH: main
      USER_EMAIL: ${{github.actor_id+${{github.actor}}@users.noreply.github.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{env.BASE_BRANCH}}
      
      - name: Get issue labels
        id: issue-labels
        run: echo "LABELS=$(echo "${{join(github.event.issue.labels.*.name, ',')]]")" >>
    
      - name: Run Issue form parser
        id: parse
        uses: peter-murray/issue-forms-body-parser@v2.0.0
        with:
          issue_id: ${{github.event.issue.number}}
          separator: '###'
          label_marker_start: '>>>'
          label_marker_end: '<<<'

      - name: Show parsed data JSON
        run: |
          echo "${{steps.parse.outputs.payload}}"
